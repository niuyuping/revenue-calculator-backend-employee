# ===========================================
# Revenue Calculator Backend Employee System - Main Configuration
# ===========================================

# Application basic information configuration
spring.application.name=revenue-calculator-backend-employee

# ===========================================
# Server Configuration
# ===========================================
# Server port configuration with environment variable override support, default port 9001
server.port=${PORT:9001}

# ===========================================
# Database Connection Configuration (R2DBC - Reactive Database Connection)
# ===========================================
# PostgreSQL database connection URL with environment variable override support
spring.r2dbc.url=${DB_URL:r2dbc:postgresql://localhost:5432/employee}
# Database username with environment variable override support
spring.r2dbc.username=${DB_USER:db_user}
# Database password with environment variable override support
spring.r2dbc.password=${DB_PASSWORD:local}

# ===========================================
# Database Migration Configuration (Flyway)
# ===========================================
# Enable Flyway database migration tool
spring.flyway.enabled=true
# JDBC connection URL used by Flyway (different from R2DBC, Flyway requires JDBC)
spring.flyway.url=${FLYWAY_URL:jdbc:postgresql://localhost:5432/employee}
# Flyway database username
spring.flyway.user=${DB_USER:db_user}
# Flyway database password
spring.flyway.password=${DB_PASSWORD:local}
# Database migration script location
spring.flyway.locations=classpath:db/migration
# Automatically create baseline version during migration
spring.flyway.baseline-on-migrate=true
# Baseline version number
spring.flyway.baseline-version=0
# Whether to validate scripts during migration (recommended to disable in development)
spring.flyway.validate-on-migrate=false

# ===========================================
# API Documentation Configuration (Swagger/OpenAPI)
# ===========================================
# OpenAPI specification document path
springdoc.api-docs.path=/v3/api-docs
# Swagger UI access path
springdoc.swagger-ui.path=/swagger-ui.html
# API documentation URL used by Swagger UI
springdoc.swagger-ui.url=/v3/api-docs
# Enable Swagger UI interface
springdoc.swagger-ui.enabled=true
# Enable "Try it out" functionality for online API testing
springdoc.swagger-ui.try-it-out-enabled=true
# Sort API operations by HTTP method
springdoc.swagger-ui.operations-sorter=method
# Sort API tags alphabetically
springdoc.swagger-ui.tags-sorter=alpha
# Display request duration
springdoc.swagger-ui.display-request-duration=true
# Display operation ID
springdoc.swagger-ui.display-operation-id=true
# Show Actuator endpoints in Swagger UI
springdoc.show-actuator=true
# Swagger configuration URL
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
# Disable default Swagger URL
springdoc.swagger-ui.disable-swagger-default-url=true
# Use standalone layout
springdoc.swagger-ui.layout=StandaloneLayout
# Enable deep linking
springdoc.swagger-ui.deep-linking=true
# Enable filter functionality
springdoc.swagger-ui.filter=true
# Show extension information
springdoc.swagger-ui.show-extensions=true
# Show common extensions
springdoc.swagger-ui.show-common-extensions=true
# Supported HTTP methods
springdoc.swagger-ui.supported-submit-methods=get,post,put,delete,patch
# Disable Swagger validator URL
springdoc.swagger-ui.validator-url=


# ===========================================
# Application Monitoring Configuration (Spring Boot Actuator)
# ===========================================
# List of exposed monitoring endpoints
management.endpoints.web.exposure.include=health,info,flyway,metrics,refresh
# Health check shows detailed information
management.endpoint.health.show-details=always
# Health check endpoint access permission (unrestricted)
management.endpoint.health.access=unrestricted
# Health check shows all component status
management.endpoint.health.show-components=always
# Flyway endpoint access permission (unrestricted)
management.endpoint.flyway.access=unrestricted
# Application info endpoint access permission (unrestricted)
management.endpoint.info.access=unrestricted
# Metrics endpoint access permission (unrestricted)
management.endpoint.metrics.access=unrestricted
# Enable database health check
management.health.db.enabled=true

# ===========================================
# Performance Metrics Configuration (Micrometer)
# ===========================================
# Enable percentile histogram for HTTP requests
management.metrics.distribution.percentiles-histogram.http.server.requests=true
# Define SLO (Service Level Objective) thresholds for HTTP requests
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s,2s,5s
# Application tag for metrics categorization
management.metrics.tags.application=revenue-calculator-employee
# Environment tag, dynamically gets current active profile
management.metrics.tags.environment=${spring.profiles.active:default}

# ===========================================
# Application Information Configuration
# ===========================================
# Application name, displayed in Actuator /info endpoint
info.app.name=Revenue Calculator Backend Employee
# Application description, explains main functionality
info.app.description=REST API for Employee Management System
# Application version number
info.app.version=1.0.0
# Application character encoding
info.app.encoding=UTF-8
# Runtime Java version
info.app.java.version=21


# ===========================================
# Fault Tolerance Configuration (Resilience4j)
# ===========================================
# Note: Rate limiter configurations are now managed in RateLimitConfig.java
# This ensures consistency and avoids duplication between Java config and properties
# All rate limiter instances are defined programmatically with proper monitoring integration

# ===========================================
# Cache Configuration (Caffeine In-Memory Cache)
# ===========================================
# Caffeine cache specification configuration:
# - maximumSize=1000: Maximum cache entries
# - expireAfterWrite=5m: Expire 5 minutes after write
# - expireAfterAccess=2m: Expire 2 minutes after access
# - recordStats: Record cache statistics
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=5m,expireAfterAccess=2m,recordStats
# Defined cache names
spring.cache.cache-names=employees

spring.config.import=optional:configserver:
spring.cloud.config.uri=${CONFIG_SERVER_URI:http://localhost:8888}
spring.cloud.config.request-connect-timeout=10000
spring.cloud.config.request-read-timeout=30000
spring.cloud.config.fail-fast=true
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.max-interval=2000
spring.cloud.config.retry.max-attempts=6
spring.cloud.config.retry.multiplier=1.1
