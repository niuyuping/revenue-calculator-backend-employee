spring.application.name=revenue-calculator-backend-employee

# 服务器配置
server.port=9001

spring.r2dbc.url=r2dbc:postgresql://localhost:5432/asatex-revenue
spring.r2dbc.username=db_user
spring.r2dbc.password=local
spring.r2dbc.pool.max-size=10
spring.r2dbc.pool.max-idle-time=PT10S
spring.r2dbc.pool.max-life-time=PT10S

# Flyway配置
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://localhost:5432/asatex-revenue
spring.flyway.user=db_user
spring.flyway.password=local
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=true

# Swagger/OpenAPI配置
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.display-operation-id=true
springdoc.swagger-ui.url=/v3/api-docs
springdoc.api-docs.enabled=true
springdoc.show-actuator=true
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.disable-swagger-default-url=true
# Swagger UI布局和样式配置
springdoc.swagger-ui.layout=StandaloneLayout
springdoc.swagger-ui.deep-linking=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.show-extensions=true
springdoc.swagger-ui.show-common-extensions=true

# 国际化配置
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600
spring.web.locale=en
spring.web.locale-resolver=fixed

# SpringDoc多语言配置
springdoc.swagger-ui.supported-submit-methods=get,post,put,delete,patch
springdoc.swagger-ui.validator-url=

# Actuator监控配置
management.endpoints.web.exposure.include=health,info,flyway,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.flyway.access=unrestricted
management.endpoint.info.access=unrestricted
management.endpoint.metrics.access=unrestricted

# 基础指标配置
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s,2s,5s
management.metrics.tags.application=revenue-calculator-employee
management.metrics.tags.environment=${spring.profiles.active:default}

# 应用信息配置
info.app.name=Revenue Calculator Backend Employee
info.app.description=従業員管理システムのREST API
info.app.version=1.0.0
info.app.encoding=UTF-8
info.app.java.version=21

# 日志配置
# 日志级别配置
logging.level.root=INFO
logging.level.jp.asatex.revenue_calculator_backend_employee=INFO
logging.level.org.springframework.web.reactive=DEBUG
logging.level.org.springframework.r2dbc=DEBUG
logging.level.io.r2dbc.postgresql=DEBUG
logging.level.org.flywaydb=INFO
logging.level.org.springdoc=INFO

# 日志格式配置
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n

# 日志文件配置
logging.file.name=logs/revenue-calculator-employee.log
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=3GB

# 请求日志配置
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.level.org.springframework.web.reactive.function.client.ExchangeFilterFunction=DEBUG

# JSON格式日志（用于结构化日志）
# logging.pattern.console.json={"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%-5level","thread":"%thread","logger":"%logger{36}","message":"%msg","traceId":"%X{traceId:-}","spanId":"%X{spanId:-}"}%n

# 缓存配置
spring.cache.type=redis
spring.cache.redis.time-to-live=1800000
spring.cache.redis.cache-null-values=false

# Redis配置
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Resilience4j配置
resilience4j.ratelimiter.instances.employee-api.limit-for-period=100
resilience4j.ratelimiter.instances.employee-api.limit-refresh-period=60s
resilience4j.ratelimiter.instances.employee-api.timeout-duration=1s

resilience4j.ratelimiter.instances.employee-search.limit-for-period=50
resilience4j.ratelimiter.instances.employee-search.limit-refresh-period=60s
resilience4j.ratelimiter.instances.employee-search.timeout-duration=1s

resilience4j.ratelimiter.instances.employee-write.limit-for-period=20
resilience4j.ratelimiter.instances.employee-write.limit-refresh-period=60s
resilience4j.ratelimiter.instances.employee-write.timeout-duration=2s

