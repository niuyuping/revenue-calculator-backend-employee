# ===========================================
# Revenue Calculator Backend Employee System - Production Environment Configuration
# ===========================================

# ===========================================
# Cloud Database Connection Configuration (Google Cloud SQL)
# ===========================================
# Production database connection URL, must be provided via environment variables
spring.r2dbc.url=${DB_URL}
# Production database username, must be provided via environment variables
spring.r2dbc.username=${DB_USER}
# Production database password, must be provided via environment variables
spring.r2dbc.password=${DB_PASSWORD}

# ===========================================
# R2DBC Connection Pool Configuration - Production Environment Optimization
# ===========================================
# Enable R2DBC connection pool
spring.r2dbc.pool.enabled=true
# Maximum connection pool size with environment variable override support, default 10
spring.r2dbc.pool.max-size=${DB_POOL_MAX_SIZE:10}
# Maximum connection idle time with environment variable override support, default 10 minutes
spring.r2dbc.pool.max-idle-time=${DB_POOL_MAX_IDLE_TIME:PT10M}
# Maximum connection lifetime with environment variable override support, default 30 minutes
spring.r2dbc.pool.max-life-time=${DB_POOL_MAX_LIFE_TIME:PT30M}
# Initial connection pool size with environment variable override support, default 2
spring.r2dbc.pool.initial-size=${DB_POOL_INITIAL_SIZE:2}
# Connection validation query statement
spring.r2dbc.pool.validation-query=SELECT 1
# Maximum wait time to acquire connection, 30 seconds
spring.r2dbc.pool.max-acquire-time=PT30S
# Maximum wait time to create connection, 30 seconds
spring.r2dbc.pool.max-create-connection-time=PT30S
# Maximum wait time for connection validation, 5 seconds
spring.r2dbc.pool.max-validation-time=PT5S
# Connection validation depth, remote validation
spring.r2dbc.pool.validation-depth=remote

# ===========================================
# Database Migration Configuration (Flyway) - Production Environment
# ===========================================
# Enable Flyway database migration
spring.flyway.enabled=true
# JDBC connection URL used by Flyway, must be provided via environment variables
spring.flyway.url=${FLYWAY_URL}
# Flyway database username
spring.flyway.user=${DB_USER}
# Flyway database password
spring.flyway.password=${DB_PASSWORD}
# Database migration script location
spring.flyway.locations=classpath:db/migration
# Automatically create baseline version during migration
spring.flyway.baseline-on-migrate=true
# Baseline version number
spring.flyway.baseline-version=0
# Production environment must validate migration scripts
spring.flyway.validate-on-migrate=true
# Production environment disables clean functionality (security consideration)
spring.flyway.clean-disabled=true
# Production environment does not allow out-of-order migration (security consideration)
spring.flyway.out-of-order=false


# ===========================================
# Server Configuration - Production Environment
# ===========================================
# Production server port with environment variable override support, default 8080
server.port=${PORT:8080}

# ===========================================
# Application Monitoring Configuration (Actuator) - Production Environment Security
# ===========================================
# Production environment only exposes necessary monitoring endpoints
management.endpoints.web.exposure.include=health,info,metrics
# Health check endpoint read-only access permission
management.endpoint.health.access=read-only
# Enable database health check
management.health.db.enabled=true


# ===========================================
# Memory Optimization Configuration
# ===========================================
# Enable lazy initialization to reduce startup time and memory usage
spring.main.lazy-initialization=true

# ===========================================
# Production Environment Basic Configuration
# ===========================================
# Production environment disables debug mode
debug=false
# Production environment disables ANSI color output
spring.output.ansi.enabled=never

# ===========================================
# Health Check Security Configuration
# ===========================================
# Only show component details when authorized (security consideration)
management.endpoint.health.show-components=when-authorized
# Only show detailed information when authorized (security consideration)
management.endpoint.health.show-details=when-authorized

# ===========================================
# API Documentation Configuration (Swagger) - Production Environment Security
# ===========================================
# Production environment disables "Try it out" functionality (security consideration)
springdoc.swagger-ui.try-it-out-enabled=false
# Production environment does not display operation ID
springdoc.swagger-ui.display-operation-id=false
# Production environment does not show Actuator endpoints in Swagger
springdoc.show-actuator=false
# Production environment does not show extension information
springdoc.swagger-ui.show-extensions=false
# Production environment does not show common extensions
springdoc.swagger-ui.show-common-extensions=false
# Production environment limits supported HTTP methods
springdoc.swagger-ui.supported-submit-methods=get,post,put,delete
# Production environment limits model expansion depth
springdoc.swagger-ui.default-models-expand-depth=1
# Production environment limits model expansion depth
springdoc.swagger-ui.default-model-expand-depth=1
# Production environment documentation does not auto-expand
springdoc.swagger-ui.doc-expansion=none

